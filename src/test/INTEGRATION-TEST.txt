Product: Integration tests for WSO2 EI asana connector

Pre-requisites:

 - Maven 3.x
 - Java 1.8

Tested Platform: 

 - Microsoft WINDOWS V-8.1
 - UBUNTU 16.04 LTS
 - WSO2 EI 6.2.0

Steps to follow in setting integration test.

 1. Download latest EI from the following URL: http://wso2.com/products/enterprise-service-bus/

 2. Copy that zip file in to location "<ASANA_HOME>/repository/".

 3. Create an Asana account using URL: https://app.asana.com/

 4. Follow the below mentioned steps to generate the access token
    i)      Login to the created Asana account and go to
            https://asana.com/developers/documentation/getting-started/auth#register-an-app
    ii)     Click on “visit your Account Settings dialog”
    iii)    Click on Developer create application or Manage Developer App
    iv)     Go to “Add New Application”
    v)      Give proper
            App Name - New application name
            App URL - Enter any sample URL
            Redirect URL -  Enter the Callback URL
            Then click on create
    vi)     Get client Id, client Secret and store them for future use
    vii)    Get the Authorization code from Azure Access Control Service Construct the authorization url as follows:
            https://app.asana.com/-/oauth_authorize?client_id=<client_Id>&redirect_uri=<redirect_url>&response_type=code&state=somerandomstate
    viii)   Asana Online site redirects the browser back to the redirect URI that was specified when the app was registered in step 5. It also includes the authorization code as a query string. The redirect URL is structured like the following:
            https://redirect_url?code=<authorization_code>&state=somerandomstate
            Extract query string value code from above url and it will be used in next step.
    ix)     Get the access token and refresh token from code:
            Construct the below post request:
            https://app.asana.com/-/oauth_token?client_id=<client_id>&client_secret=<client_secret>&redirect_uri=<redirect_uri>&code=<authorization_code>&grant_type=authorization_code
    x)      Get the access token from refresh token:
            This step is almost similar to step 9, except 2 differences. Here the difference is that we use:
            * grant_type as refresh_token and
            * refresh_token instead of code in step 9 and use the refresh token which we have saved in step 9.
            https://app.asana.com/-/oauth_token?client_id=<client_id>&client_secret=<client_secret>&redirect_uri=<redirect_uri>&refresh_token=<refresh_token>&grant_type=refresh_token

 5. Update the Asana properties file at location "<ASANA_CONNECTOR_HOME>/src/test/resources/artifacts/ESB/connector/config" as below.

	i)   apiUrl		    - 	The API URL specific to the domain of the created account. e.g. https://app.asana.com/api
	ii)  apiVersion     - 	The API version of asana.
	iii) clientId	    - 	The Client ID uniquely identifies the application making the request.
	iv)	 clientSecret	-	The Client Secret belonging to the app, found in the details pane of the developer console.
	v)	 redirectUri	- 	The URI to redirect to on success or error. This must match the Redirect URL specified in
					        the application settings.
	vi)	 grantType	    -	One of authorization_code, refresh_token or password.
	vii) refreshToken	-	If exchanging a code, a long-lived token that can be used to get new access tokens when old
					        ones expire.
	viii)accessToken	-	The token to use in future requests against the API.
	ix)	 workspace	    -	The ID for a workspace.
	x)	 attachment	    -	The ID for an attachment.

        Note - There should be at least a difference of 10 minutes between eventOccurredAfter value and eventOccurredBefore value.   

 6. Navigate to "{ASANA_HOME}/" and run the following command.
        $ mvn clean install -Dskip-tests=false
